@using PlayerLink.Models
@using Microsoft.JSInterop
@using PlayerLink.Components.Tag
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager


<div @onclick="ShowModal">
    <div class="d-flex flex-row" id="lobby-container">
        @foreach (string user in Images)
        {
            <div id="img">
                <img src="@user" />
            </div>
            <span>
                @foreach (var tag in ShownTags)
                {
                    <Tag tagname="@tag"/>
                }
            </span>

        }
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" @ref="modalElement">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@LobbyData.LobbyName</h5>
                <button type="button" class="btn-close" @onclick="HideModal"></button>
            </div>
            <div class="modal-body">
                <h6>Players:</h6>
                @foreach (User user in LobbyData.Users)
                {
                    <div>
                        <PlayerLink.Shared.Components.User.User user="@user"/>
                        <div class="d-flex traits">
                        Traits:
                            <span>
                            @foreach (var tag in @user.Tags)
                            {
                                <span id="tag"><Tag tagname="@tag"/></span>
                            }
                            </span>
                        </div>
                    </div> 
                }
            </div>
            <div class="modal-footer custom-modal-footer">
                <div class="lobby-tags">
                    <div class="d-flex tag-row">
                        <strong>Desired</strong>
                        @foreach (string tag in LobbyData.DesiredTags)
                        {
                            <span id="tag"><Tag tagname="@tag"/></span>
                        }
                    </div>
                    <div class="d-flex tag-row">
                        <strong>Undesired</strong>
                        @foreach (string tag in LobbyData.UndesiredTags)
                        {
                            <span id="tag"><Tag tagname="@tag"/></span>
                        }
                    </div>
                    <div class="d-flex tag-row">
                        <strong>Owner Tags</strong>
                        @foreach (string tag in LobbyData.DescribeYourselfTags)
                        {
                            <span id="tag"><Tag tagname="@tag"/></span>
                        }
                    </div>
                </div>
                <div class="d-flex justify-content-center button-space">
                    <button type="button" class="btn btn-primary" @onclick="JoinLobby">Join Lobby</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Lobby LobbyData { get; set; }
    [Parameter] public List<string> ShownTags {get; set;} = new List<string>();
    private ElementReference modalElement;

    public List<string> Images { get; set; } = new List<string>();

    protected override void OnParametersSet()
    {
        CreateImages();
    }

    private void CreateImages()
    {
        Images.Clear();
        for (int i = 0; i < LobbyData.NumPlayers + LobbyData.MissingPlayers; i++)
        {
            if (i < LobbyData.NumPlayers)
            {
                Images.Add("/img/user.svg");
            }
            else
            {
                Images.Add("/img/unoccupied-user.svg");
            }
        }
    }

    public async Task ShowModal()
    {
        await JSRuntime.InvokeVoidAsync("ShowModal", modalElement);
    }

    private async Task HideModal()
    {
        await JSRuntime.InvokeVoidAsync("HideModal", modalElement);
    }

    private async Task JoinLobby()
    {
        await HideModal();
        NavigationManager.NavigateTo("/lobbychat");
    }
}
