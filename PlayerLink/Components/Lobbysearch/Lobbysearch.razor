@using MudBlazor
@using PlayerLink.Services
@using System.Linq
@inject GameDataService GameDataService
@inject TagDataService TagDataService

<div class="shrink-input">
    <MudAutocomplete T="string" Label="Search Game" Value="@searchValue" SearchFunc="@SearchGames"
                     AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" 
                     ValueChanged="@(v => OnValueChanged(v))" />
</div>

@code {
    [Parameter] public EventCallback<string> OnSearchValueChanged { get; set; }

    private string searchValue;

    private async Task<IEnumerable<string>> SearchGames(string value)
    {
        await Task.Delay(5); // Simulating an async call, remove this line if using actual async data fetching

        if (string.IsNullOrEmpty(value))
        {
            return GameDataService.Games;
        }
        else
        {
            return GameDataService.Games
                .Where(x => x.StartsWith(value, StringComparison.InvariantCultureIgnoreCase))
                .OrderBy(x => x)
                .ToList();
        }
    }

    private async Task OnValueChanged(string value)
    {
        searchValue = value;
        await OnSearchValueChanged.InvokeAsync(value);
    }
}
