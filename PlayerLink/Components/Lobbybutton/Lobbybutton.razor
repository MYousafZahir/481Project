@inject PlayerLink.Services.LobbyDataService LobbyDataService
@inject PlayerLink.Services.UserDataService UserDataService
@inject IJSRuntime JSRuntime
@using LobbyModel = PlayerLink.Models.Lobby
@using PlayerLink.Models
@using Microsoft.JSInterop
<div>
    <button type="button" class="btn btn-light d-flex align-items-center" data-bs-toggle="modal" data-bs-target="#create-lobby-modal" id="lobby-button">
        <span> <i class="bi bi-plus-lg"></i> Create Lobby</span>
    </button>
</div>

<div class="modal fade" id="create-lobby-modal" tabindex="-1" aria-labelledby="create-lobby-modalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="create-lobby-modalLabel">Create Lobby</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div>
          <div class="form-group">
            <label for="game">Game</label>
            <input type="text" class="form-control" id="game" placeholder="Enter game name" @bind="@Game" required minlength="1">
          </div>
          <div class="form-group">
            <label for="lobby-name">Lobby Name</label>
            <input type="text" class="form-control" id="lobby-name" placeholder="Enter lobby name" @bind="@LobbyName" required minlength="1">
          </div>
          <div class="form-group" style = "margin-bottom: 1rem;">
            <label for="lobby-name">Number of Players</label>
            <input type="number" class="form-control" id="player-count" placeholder="" @bind="@MaxPlayers" min="2" max="10">
          </div>
          <p>Enter traits below then press enter to add them</p>
          <div class="tag-container-desired">
              <div class="tag-input-container">
                  <span class="tag-input-label">Desired Traits</span>
                  <div class="tag-input-box">
                      <input type="text" @bind="desiredTagInput" @onkeyup="HandleDesiredKeyUp" placeholder="Enter desired trait(s)" />
                      @* <button class="search-button" @onclick="HandleSearch">Search</button> *@
                  </div>
              </div>
              <div class="tags">
                  @foreach (var tag in desiredTags)
                  {
                      <div class="desired_tag">
                          <span class="tag-value">@tag</span>
                          <span class="tag-remove" @onclick="() => RemoveDesiredTag(tag)">x</span>
                      </div>
                  }
              </div>
          </div>
          <div class="tag-container-undesired">
              <div class="tag-input-container">
                  <span class="tag-input-label">Undesired Traits</span>
                  <div class="tag-input-box">
                      <input type="text" @bind="undesiredTagInput" @onkeyup="HandleUndesiredKeyUp" placeholder="Enter undesired trait(s)" />
                      @* <button class="search-button" @onclick="HandleSearch">Search</button> *@
                  </div>
              </div>
              <div class="tags">
                  @foreach (var tag in undesiredTags)
                  {
                      <div class="undesired_tag">
                          <span class="tag-value">@tag</span>
                          <span class="tag-remove" @onclick="() => RemoveUndesiredTag(tag)">x</span>
                      </div>
                  }
              </div>
          </div>

          <div class="tag-container-your">
              <div class="tag-input-container">
                  <span class="tag-input-label">Your Traits</span>
                  <div class="tag-input-box">
                      <input type="text" @bind="yourTagInput" @onkeyup="HandleYourKeyUp" placeholder="Enter your desired trait(s)" />
                      @* <button class="search-button" @onclick="HandleSearch">Search</button> *@
                  </div>
              </div>
              <div class="tags">
                  @foreach (var tag in yourTags)
                  {
                      <div class="your_tag">
                          <span class="tag-value">@tag</span>
                          <span class="tag-remove" @onclick="() => RemoveYourTag(tag)">x</span>
                      </div>
                  }
              </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" @onclick="CreateLobby">Create Lobby</button>
      </div>
    </div>
  </div>
</div>

@code {
    private string Game { get; set; } = "";
    private string LobbyName { get; set; } = "";
    private List<string> desiredTags = new List<string>();
    private List<string> undesiredTags = new List<string>();
    private List<string> yourTags = new List<string>();
    private string desiredTagInput = string.Empty;
    private string undesiredTagInput = string.Empty;
    private string yourTagInput = string.Empty;
    private int MaxPlayers;
    private void HandleDesiredKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !string.IsNullOrWhiteSpace(desiredTagInput))
        {
            desiredTags.Add(desiredTagInput);
            desiredTagInput = string.Empty;
        }
    }

    private void HandleUndesiredKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !string.IsNullOrWhiteSpace(undesiredTagInput))
        {
            undesiredTags.Add(undesiredTagInput);
            undesiredTagInput = string.Empty;
        }
    }

    private void HandleYourKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !string.IsNullOrWhiteSpace(yourTagInput))
        {
            yourTags.Add(yourTagInput);
            yourTagInput = string.Empty;
        }
    }
    private void RemoveDesiredTag(string tag)
    {
        // Remove the tag from the list of saved tags
        desiredTags.Remove(tag);
    }

    private void RemoveUndesiredTag(string tag)
    {
        undesiredTags.Remove(tag);
    }

    private void RemoveYourTag(string tag)
    {
        yourTags.Remove(tag);
    }

    private async void CreateLobby()
    {

        // Get the current user (replace "currentUserUsername" with the actual username)
        User currentUser = UserDataService.GetUserByUsername("Alice");

        LobbyModel newLobby = new LobbyModel
        {
            LobbyID = LobbyDataService.Lobbies.Count + 1,
            Game = Game,
            MaxUsers = MaxPlayers,
            LobbyName = LobbyName,
            DesiredTags = desiredTags,
            UndesiredTags = undesiredTags,
            DescribeYourselfTags = yourTags,
            Users = new List<User> { currentUser } // Add the current user to the new lobby
        };

        LobbyDataService.AddLobby(newLobby);
        await JSRuntime.InvokeVoidAsync("eval", "bootstrap.Modal.getInstance(document.getElementById('create-lobby-modal')).hide();");
    }



}


